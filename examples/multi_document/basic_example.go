package main

import (
	"log"
	"os"

	generator "github.com/tuanhuu3264/tuan-invoice"
)

func main() {
	// Create options
	options := &generator.Options{
		TextInvoiceTitle:       "INVOICE",
		TextRefTitle:           "Ref",
		TextDateTitle:          "Date",
		TextVersionTitle:       "Version",
		TextItemsNameTitle:     "Item",
		TextItemsUnitCostTitle: "Unit Price",
		TextItemsQuantityTitle: "Qty",
		TextItemsTotalHTTitle:  "Total HT",
		TextItemsTaxTitle:      "Tax",
		TextItemsDiscountTitle: "Discount",
		TextItemsTotalTTCTitle: "Total TTC",
		TextTotalTotal:         "TOTAL HT",
		TextTotalTax:           "TOTAL TAX",
		TextTotalWithTax:       "TOTAL TTC",
		TextTotalDiscounted:    "DISCOUNT",
		TextPaymentTermTitle:   "Payment Term",
		Font:                   "Arial",
		BoldFont:               "Arial",
	}

	// Create multi-document
	md := generator.NewMultiDocument(options)

	// Set header
	header := &generator.HeaderFooter{
		Text: "Multi-Document Invoice Generator",
	}
	md.SetHeader(header)

	// Set footer
	footer := &generator.HeaderFooter{
		Text: "Generated by Multi-Document System",
	}
	md.SetFooter(footer)

	// Create first document
	doc1, err := generator.New(generator.Invoice, options)
	if err != nil {
		log.Fatal(err)
	}
	doc1.SetRef("INV-001")
	doc1.SetVersion("1.0")
	doc1.SetDate("15/01/2024")
	doc1.SetDescription("First invoice description")
	doc1.SetNotes("Khi mở vui lòng quay video")
	doc1.SetPaymentTerm("30 days")
	doc1.SetBarCode("EZ210166800VN")

	// Read logo file
	logoBytes, err := os.ReadFile("examples/logo.jpg")
	if err != nil {
		log.Fatal("Error reading logo file:", err)
	}

	// Set company info
	doc1.Company = &generator.Contact{
		Name: "Company A",
		Logo: logoBytes,
		Address: &generator.Address{
			Address:    "123 Main St",
			City:       "City",
			PostalCode: "12345",
			Country:    "Country",
		},
		Phone: "0909090909",
	}

	// Set customer info
	doc1.Customer = &generator.Contact{
		Name: "Customer A",
		Address: &generator.Address{
			Address:    "456 Oak Ave",
			City:       "Town",
			PostalCode: "67890",
			Country:    "Country",
		},
		Phone: "0909090909",
	}

	// Add items
	doc1.AppendItem(&generator.Item{
		Name:        "Item 1",
		Description: "This is a test description that should not appear",
		UnitCost:    "100.00",
		Quantity:    "2",
	})

	// Create second document
	doc2, err := generator.New(generator.Invoice, options)
	if err != nil {
		log.Fatal(err)
	}
	doc2.SetRef("INV-002")
	doc2.SetVersion("1.0")
	doc2.SetDate("16/01/2024")
	doc2.SetDescription("Second invoice description")
	doc2.SetNotes("Khi mở vui lòng quay video")
	doc2.SetPaymentTerm("15 days")
	doc2.SetBarCode("EZ210166800VN")

	// Set company info (reuse the same logo)
	doc2.Company = &generator.Contact{
		Name: "Company B",
		Logo: logoBytes,
		Address: &generator.Address{
			Address:    "789 Pine Rd",
			City:       "Village",
			PostalCode: "11111",
			Country:    "Country",
		},
		Phone: "0909090909",
	}

	// Set customer info
	doc2.Customer = &generator.Contact{
		Name: "Customer B",
		Address: &generator.Address{
			Address:    "321 Elm St",
			City:       "City",
			PostalCode: "22222",
			Country:    "Country",
		},
		Phone: "0909090909",
	}

	// Add items
	doc2.AppendItem(&generator.Item{
		Name:     "Item 2",
		UnitCost: "150.0",
		Quantity: "1",
	})

	// Add documents to multi-document
	md.AddDocument(doc1)
	md.AddDocument(doc2)

	// Build PDF
	pdf, err := md.Build()
	if err != nil {
		log.Fatal(err)
	}

	// Save to file
	err = pdf.OutputFileAndClose("multi_document_example_no_silver_final.pdf")
	if err != nil {
		log.Fatal(err)
	}

	log.Println("Multi-document PDF with no silver text lines generated successfully!")
}
